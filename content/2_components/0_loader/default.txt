Title: Loader

----

Content:

Allows pages to be navigated without a refresh, similar to how [single-page applications](https://developer.mozilla.org/en-US/docs/Glossary/SPA) work. It does that by preventing the default functionality when clicking on a link, loading its `href` with AJAX, and injecting the content.

- Allows you to easily add page transitions
- Supports multiple content containers
- Scrolls the page smoothly
- Correctly applies scroll on backwards navigations

(example: loader active: result)

If you want to have page transitions, all you have to do is extend the Container subcomponent. It has `animateIn()` and `animateOut()` methods which should return a [Promise](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise) that resolves when the animation has finished. By default, they return an already resolved Promise (no animation). But here, we'll add a class that applies a CSS animation and use the `promiseAnimation()` method to return a Promise that resolves when the [`animationend` event](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/animationend_event) is fired:

(example: loader-animated active: js)

A useful side effect is that thanks to the (link: #todo text: Watcher), all Oblik components are automatically initialized and destroyed when added/removed from the page. This greatly reduces complexity and the chance for memory leaks.

## Components

- `container` holds the main content of the page

**Note:** You can have as containers as you need.

## Options

### `scroll.duration`

Duration for the scroll animation. Setting this to `0` disables the animation.

**Default:** `1000`

### `scroll.easing`

Easing for the scroll animation.

**Default:** `easeOutQuint`